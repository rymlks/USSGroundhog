using EasyState;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

[AddComponentMenu("EasyState/$data-type/$data-type StateMachine")]
public class $data-typeStateMachine : EasyStateMachine<$data-type>
{
    public override string DataTypeID => $data-type.$data-typeID;
#if UNITY_EDITOR
    [UnityEditor.MenuItem("Assets/EasyState/$data-type/New Condition")]
    public static void CreateCondition() => EasyState.Editor.Utility.ScriptGenerator.CreateCondition(nameof($data-type));
    [UnityEditor.MenuItem("Assets/EasyState/$data-type/New Action")]
    public static void CreateAction() => EasyState.Editor.Utility.ScriptGenerator.CreateAction(nameof($data-type));
    [UnityEditor.MenuItem("Assets/EasyState/$data-type/New Evaluator")]
    public static void CreateEvaluator() => EasyState.Editor.Utility.ScriptGenerator.CreateEvaluator(nameof($data-type));
    [UnityEditor.MenuItem("Assets/EasyState/$data-type/New Parameterized Action")]
    public static void CreateParameterizedAction() => EasyState.Editor.Utility.ScriptGenerator.CreateParameterizedAction(nameof($data-type));
#endif
}